version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: crypto_signals_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-crypto_signals}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - crypto_network
    restart: unless-stopped

  # Backend API (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crypto_signals_backend
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@db:5432/${POSTGRES_DB:-crypto_signals}
      - JWT_SECRET=${JWT_SECRET}
      - BINANCE_API_KEY=${BINANCE_API_KEY:-}
      - BINANCE_SECRET_KEY=${BINANCE_SECRET_KEY:-}
      - TRADING_ECONOMICS_KEY=${TRADING_ECONOMICS_KEY:-}
      - TE_GUEST=${TE_GUEST:-guest:guest}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - CORS_ORIGINS=${CORS_ORIGINS:-http://localhost:3000,http://localhost:8080}
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - crypto_network
    restart: unless-stopped
    volumes:
      - ./backend:/app
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: crypto_signals_frontend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - crypto_network
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev

  # Telegram Bot
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: crypto_signals_bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_BASE_URL=http://backend:8000
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres123}@db:5432/${POSTGRES_DB:-crypto_signals}
    depends_on:
      - backend
      - db
    networks:
      - crypto_network
    restart: unless-stopped
    volumes:
      - ./bot:/app

networks:
  crypto_network:
    driver: bridge

volumes:
  postgres_data:

